name: CI

on:
    push:
        branches: ["main"]
        tags: ["v*"]
    pull_request:
        branches: ["main"]

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

env:
    CARGO_TERM_COLOR: always

jobs:
    rust-checks:
        runs-on: ubuntu-latest
        permissions:
            contents: read
            id-token: write
            packages: write
        steps:
            - uses: actions/checkout@v4
            - uses: moonrepo/setup-rust@v1
              with:
                  cache: false
            - run: cargo fmt --all -- --check
            - uses: Swatinem/rust-cache@v2
            # - run: cargo test --all-targets --all-features
            - run: cargo clippy --all-targets --all-features -- -D warnings
            # - run: cargo audit

    build-and-push:
        if: ${{ github.actor != 'dependabot[bot]' }}
        runs-on: ubuntu-latest
        needs: rust-checks
        steps:
            - uses: actions/checkout@v4
              with:
                  fetch-depth: 0
            - uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}
            - uses: docker/setup-qemu-action@v3
            - uses: docker/setup-buildx-action@v3
            - id: vars
              run: .github/scripts/vars
            - id: image-meta
              uses: docker/metadata-action@v5
              with:
                  images: ${{ steps.vars.outputs.image }}
                  tags: |
                      type=raw,value=${{ steps.vars.outputs.version }},event=push
                      type=raw,value=latest,event=push,enable={{is_default_branch}}
                      type=semver,pattern=v{{version}},event=tag
                      type=semver,pattern=v{{major}}.{{minor}},event=tag
                      type=semver,pattern=v{{major}},event=tag
            - uses: docker/build-push-action@v6
              with:
                  platforms: linux/amd64,linux/arm64
                  tags: ${{ steps.image-meta.outputs.tags }}
                  cache-from: type=gha
                  cache-to: type=gha,mode=max
                  push: true
